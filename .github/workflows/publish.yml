# This is a basic workflow to help you get started with Actions
# This file was contributed by Carlos Parada, Edwin Betancourt and Yamel Senih from ERP Consultores y Asociados, C.A

name: Publish With gradle to maven Sonatype/GitHub Packages

permissions:
  contents: write # to upload release assets
  packages: write # to publish packages

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  release:
    types:
      - published

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Check secrets to publish sonatype registry
  check-sonatype-secrets:
    name: Check if the sonatype information was set on secrets and variables
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_sonatype_secrets_job.outputs.is_have_secrets }}
    steps:
      - id: check_sonatype_secrets_job
        run: |
          if [[ "${{ secrets.DEPLOY_PUBLISH_SONATYPE_URL }}" != "" && \
                "${{ secrets.PGP_SECRET }}" != "" && \
                "${{ secrets.PGP_PASSPHRASE }}" != "" && \
                "${{ secrets.OSSRH_USERNAME }}" != "" && \
                "${{ secrets.OSSRH_TOKEN }}" != "" ]]; \
          then
            echo "Secrets to use a container registry are configured in the repo"
            echo "is_have_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use a container registry were not configured in the repo"
            echo "is_have_secrets=false" >> $GITHUB_OUTPUT
          fi

  publish-sonatype:
    name: Publish Project (Sonatype)
    needs:
      - check-sonatype-secrets
    # Skip step based on secret
    if: needs.check-sonatype-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-package: 'jdk'
          java-version: 17
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current # 9.0.0

      - name: Build with Gradle
        run: gradle publish
        env:
          ORG_GRADLE_PROJECT_deployVersion: ${{ github.event.release.tag_name }}
          ORG_GRADLE_PROJECT_deployPublishUrl: ${{ secrets.DEPLOY_PUBLISH_SONATYPE_URL }}
          ORG_GRADLE_PROJECT_deploySigningKey: ${{ secrets.PGP_SECRET }}
          ORG_GRADLE_PROJECT_deploySigningPassword: ${{ secrets.PGP_PASSPHRASE }}
          ORG_GRADLE_PROJECT_deployUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_deployToken: ${{ secrets.OSSRH_TOKEN }}


  # # Check secrets to publish github registry
  check-github-secrets:
    name: Check if the github information was set on secrets and variables
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_github_secrets_job.outputs.is_have_secrets }}
    steps:
      - id: check_github_secrets_job
        run: |
          missing_secrets=""
          has_github_secrets="true"

          # User secrets
          if [[ -z "${{ secrets.DEPLOY_USER }}" ]]; then
            missing_secrets="$missing_secrets DEPLOY_USER"
            # has_github_secrets="false"
          fi

          if [[ -z "${{ secrets.DEPLOY_TOKEN }}" ]]; then
            missing_secrets="$missing_secrets DEPLOY_TOKEN"
            # has_github_secrets="false"
          fi

          # Verify optional secrets but report if they are missing
          if [[ -z "${{ secrets.DEPLOY_PUBLISH_GITHUB_URL }}" ]]; then
            echo "⚠️ DEPLOY_PUBLISH_GITHUB_URL not set, using default: ${{ env.DEFAULT_DEPLOY_PUBLISH_GITHUB_URL }}"
          fi

          # if [[ -z "${{ secrets.DEPLOY_REPOSITORY }}" ]]; then
          #   echo "⚠️ DEPLOY_REPOSITORY not set, using default: ${{ env.DEFAULT_DEPLOY_REPOSITORY }}"
          # fi

          # Output of results
          echo "is_have_secrets=$has_github_secrets" >> $GITHUB_OUTPUT
          echo "missing_secrets=$missing_secrets" >> $GITHUB_OUTPUT

          if [[ "$has_github_secrets" == "false" ]]; then
            echo "❌ Missing required secrets:$missing_secrets"
            echo "Please configure these secrets in your repository settings."
          else
            echo "✅ All required secrets are configured"
          fi

  publish-github:
    name: Publish Project (GitHub)
    needs:
      - check-github-secrets
    # # Skip step based on secret
    if: needs.check-github-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-package: 'jdk'
          java-version: 17
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current # 9.0.0

      - name: Build with Gradle
        run: gradle publish
        env:
          ORG_GRADLE_PROJECT_deployVersion: ${{ github.event.release.tag_name }}
          ORG_GRADLE_PROJECT_deployPublishUrl: ${{ secrets.DEPLOY_PUBLISH_GITHUB_URL }}
          ORG_GRADLE_PROJECT_deployUsername: ${{ secrets.DEPLOY_USER }}
          ORG_GRADLE_PROJECT_deployToken: ${{ secrets.DEPLOY_TOKEN }}
          ORG_GRADLE_PROJECT_deployRepository: ${{ secrets.DEPLOY_REPOSITORY }}
          GITHUB_DEPLOY_USER: ${{ github.actor }}
          GITHUB_DEPLOY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_DEPLOY_REPOSITORY: ${{ secrets.DEPLOY_REPOSITORY }}
